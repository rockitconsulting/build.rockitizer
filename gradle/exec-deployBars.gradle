/*
*	Copyright 2015 rockit.consulting GbR  (www.rockit.consulting)
*
*/

task deployBars {
	doLast {
		config.barToExecutionGroup.flatten().each { bar, exgroups  ->
		   exgroups.each { exgroup ->
	          if(hasProperty("deployBar-${bar}-${exgroup}")) {
	          	logger.lifecycle ext."deployBar-${bar}-${exgroup}" //captured output from console
	          }
		   }
		}
	}            
}

config.barToExecutionGroup.flatten().each { bar, exgroups  ->
   exgroups.each { exgroup ->
	    task "deployBar-${bar}-${exgroup}" (dependsOn:overrideBars) {
	    	doLast {
			    new ByteArrayOutputStream().withStream { os ->
		      		def cmdArgs = "mqsideploy -n ${configPath}${fileSeparator}${config.broker} -e ${exgroup} -a ${barByName(bar)} ${!incrementalDeployment.toBoolean()?'-m':''} -w 600"
		    		logger.lifecycle "[build:rockITizer] ${!incrementalDeployment.toBoolean()?'cleanAndDeploy':'incrementalDeployment'} " + cmdArgs 

			        def result = exec {
		    			//commandLine 'mqsideploy', '-n', 'C:\\rockit\\projects\\test.rockitizer.demo-master\\RockitizerDemo\\conf\\demo.broker','-e','TEST_SERVER','-a','C:\\rockit\\gradle_build\\RockitizerDemo.demo\\bar.target\\RockitizerDemo.bar','-w','600'
		    			//logger.lifecycle "[build:rockITizer] commandLine " +"'" + cmdArgs.join("\',\'") + "'"
		    			commandLine cmdArgs.split()
		    		}
		    		ext."deployBar-${bar}-${exgroup}" = os.toString()
		    	}
			}		    	
	    }		 
   		deployBars.dependsOn "deployBar-${bar}-${exgroup}"
   }
}